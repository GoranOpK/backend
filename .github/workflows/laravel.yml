# Naziv workflow-a
name: Laravel CI/CD

# Definiše kada se workflow pokreće
on:
  push:
    branches:
      - main # Workflow se pokreće kada se izvrši push u granu "main".
  pull_request:
    branches:
      - main # Workflow se pokreće kada se otvori pull request koji cilja granu "main".

# Poslovi koji se izvršavaju unutar workflow-a
jobs:
  laravel-tests:
    name: Run Laravel Tests # Naziv posla koji se izvršava.
    runs-on: ubuntu-latest # Workflow se izvršava na najnovijoj verziji Ubuntu sistema.

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        # Preuzima kod iz repozitorijuma kako bi bio dostupan za dalje korake.

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3' # Stabilna verzija PHP-a za Laravel.
          extensions: mbstring, bcmath, intl, pdo, pdo_mysql
          # Instaliraju se potrebne PHP ekstenzije za aplikaciju.
          ini-values: |
            post_max_size=256M
            upload_max_filesize=256M
          # Podešavaju se PHP ini parametri za aplikaciju.
          tools: composer # Instalira se Composer kao alat za upravljanje PHP zavisnostima.

      - name: Install Composer Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist
        # Instalira sve zavisnosti navedene u `composer.json` fajlu.

      - name: Set up storage and permissions
        run: |
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache
        # Kreira potrebne direktorijume i postavlja dozvole.

      - name: Copy environment file
        run: |
          if [ -f .env.example ]; then
            cp .env.example .env;
          else
            echo "No .env.example file found. Skipping.";
          fi
        # Provjerava da li postoji `.env.example` fajl i kopira ga kao `.env`.

      - name: Generate app key
        run: php artisan key:generate
        # Generiše APP_KEY za aplikaciju.

      - name: Setup Database
        run: |
          touch database/database.sqlite
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=/home/runner/work/backend/backend/database/database.sqlite" >> .env
        # Postavlja SQLite bazu podataka za testiranje.

      - name: Run Migrations
        run: php artisan migrate --force --no-interaction
        # Pokreće migracije kako bi se baza podataka kreirala ili ažurirala.

      - name: Run Tests
        run: php artisan test
        # Pokreće testove definisane u Laravel aplikaciji kako bi se provjerila ispravnost funkcionalnosti.